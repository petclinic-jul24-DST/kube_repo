name: Deploy latest images on DST Server via Terraform apply

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Check out the code from the repository
      - name: Checkout code from the repository
        uses: actions/checkout@v3

      # Step 2: Extract the server IP
      - name: Extract Server IP
        id: extract_ip
        run: |
          SERVER_IP=$(grep -A 3 -E '^variable "server_ip"' terraform/variables.tf | grep 'default' | sed -n 's/.*default *= *"\([^"]*\)".*/\1/p')
          echo "SERVER_IP=${SERVER_IP}"
          echo "##[set-output name=server_ip;]${SERVER_IP}"
          echo "Extracted Server IP: ${SERVER_IP}"
      
      # Step 3: Set up SSH using the PEM private key
      - name: Set up SSH with PEM private key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SECRET_DST_PRIVATE_KEY }}" > ~/.ssh/id_rsa.pem
          chmod 600 ~/.ssh/id_rsa.pem
          ssh-keyscan -H ${{ steps.extract_ip.outputs.server_ip }} >> ~/.ssh/known_hosts
          echo "Server IP is: ${{ steps.extract_ip.outputs.server_ip }}"
          echo "Known hosts:"
          cat ~/.ssh/known_hosts

      # Step 4: Copy script to server
      - name: Copy script to server
        run: |
          echo "Copy script to server with IP: ${{ steps.extract_ip.outputs.server_ip }}"
          scp -i ~/.ssh/id_rsa.pem -o StrictHostKeyChecking=no scripts/deploy-on-dst.sh ubuntu@${{ steps.extract_ip.outputs.server_ip }}:/home/ubuntu/

      # Step 5: Run script via SSH
      - name: Run script via SSH
        run: |
          SERVER_IP=${{ steps.extract_ip.outputs.server_ip }}
          echo "Deploying to server with IP: $SERVER_IP"
          ssh -i ~/.ssh/id_rsa.pem -o StrictHostKeyChecking=no ubuntu@$SERVER_IP << 'EOF'
            chmod +x /home/ubuntu/deploy-on-dst.sh
            /home/ubuntu/deploy-on-dst.sh
          EOF
